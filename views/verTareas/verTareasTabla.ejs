<% if(mensaje != "") {  %>

  <div class="notification is-success is-light exitoTarea">
    Tarea creada <strong>correctamente</strong>
  </div>
  
<% } %>

<div class="field is-static">

  <div class="columns">
    <div class="column">
      <div class="field is-horizontal">
        <h1 class="titulo" style="margin-left: 35%;">Mis tareas</h1>
      </div>
      <table class="table">
        <thead>
          <tr>
            <th><abbr title="Proyecto">Proyecto</abbr></th>
            <th><abbr title="Tarea">Tarea</abbr></th>
            <th><abbr title="Fecha">
              <!-- <button class="js-modal-trigger" data-target="filtro_fechas"><img src="../../media/filtrar (1).png" width="20px"; height="20px">
              </button> -->
              <div class="input-field is-horizontal">
                <p>Fecha inicio:</p>
                <input id="fechaInicio" type="date">
              </div>
              <div class="input-field is-horizontal">
              <p>Fecha fin:</p>
                <input id="fechaFin" type="date">
              </div>
            </abbr></th>
            <th><abbr title="Horas">Horas</abbr></th>
          </tr>
        </thead>

    <div class="section"> 
      <tbody id="lista_fechas">        
        <% for (let t of tarea) { %>
          <tr>
            <td><%= t.nombreP %></td>
            <td><%= t.nombreT %></td>
            <td><%= new Date(t.fecha).toLocaleString('ES-mx');%></td>
            <td><%= t.horasTrabajo %></td>
          </tr>
          <% } %>
      </tbody>
    </div>

        <script>
          const asyncFunc = () => {
              const fechaInicio = document.getElementById('fechaInicio').value;
              const fechaFin = document.getElementById('fechaFin').value

              //función que manda la petición asíncrona
              fetch('/tarea/buscar/' + fechaInicio + '/' + fechaFin, {
                  method: 'GET',
              }).then(result => {
                  return result.json(); //Regresa otra promesa
              }).then(data => {
                  //Modificamos el DOM de nuestra página de acuerdo a los datos de la segunda promesa
                  console.log(data.fecha);
                  let html = '';
                  if (data.fecha.length > 0) {                 
                    for(let f of (data.fecha)) {
                      html += '<tr>';
                      html += '<td>';
                      html += f.nombreP;
                      html += '</td>';
                      html += '<td>';
                      html += f.nombreT;
                      html += '</td>';
                      html += '<td>';
                      html += new Date(f.fecha).toLocaleString('ES-mx');
                      html += '</td>';
                      html += '<td>';
                      html += f.horasTrabajo;  
                      html += '</td>'; 
                      html += '</tr>';         
                    };                 
                  } else {
                      html = '<h2>No hay tareas registradas en el periodo seleccionado.</h2>';
                  }
                  document.getElementById("lista_fechas").innerHTML = html;
                
              }).catch(err => {
                  console.log(err);
              });
          };
  
          document.getElementById('fechaFin').oninput = asyncFunc;
      </script>
  
      <a href="/tarea/registrarTarea"><button class="botonTarea">Registrar nueva tarea</button></a>
    </div>
  </div>
</div>
<!-- 
<div id="filtro_fechas" class="modal">
  <div class="modal-background"></div>
  <div class="modal-card">
    <header class="modal-card-head">
      <p class="modal-card-title">Modal title</p>
      <button class="delete" aria-label="close"></button>
    </header>
    <section class="modal-card-body">
      <div class="input-field is-horizontal">
        <p>Fecha inicio:</p>
        <input id="fechaInicio" type="date">
      </div>
      <div class="input-field is-horizontal">
      <p>Fecha fin:</p>
        <input id="fechaFin" type="date">
      </div>
    </section>
    <footer class="modal-card-foot">
      <button class="button is-success">Aceptar</button>
      <button class="button" id="botonAceptar">Cancelar</button>
    </footer>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
  // Functions to open and close a modal
  function openModal($el) {
    $el.classList.add('is-active');
  }

  function closeModal($el) {
    $el.classList.remove('is-active');
  }

  function closeAllModals() {
    (document.querySelectorAll('.modal') || []).forEach(($modal) => {
      closeModal($modal);
    });
  }

  // Add a click event on buttons to open a specific modal
  (document.querySelectorAll('.js-modal-trigger') || []).forEach(($trigger) => {
    const modal = $trigger.dataset.target;
    const $target = document.getElementById(modal);

    $trigger.addEventListener('click', () => {
      openModal($target);
    });
  });

  // Add a click event on various child elements to close the parent modal
  (document.querySelectorAll('.modal-background, .modal-close, .modal-card-head .delete, .modal-card-foot .button') || []).forEach(($close) => {
    const $target = $close.closest('.modal');

    $close.addEventListener('click', () => {
      closeModal($target);
    });
  });

  // Add a keyboard event to close all modals
  document.addEventListener('keydown', (event) => {
    const e = event || window.event;

    if (e.keyCode === 27) { // Escape key
      closeAllModals();
    }
  });
});
</script> -->