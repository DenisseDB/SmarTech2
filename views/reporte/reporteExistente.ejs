<div class="titulo">Reporte semanal NatDev - Editar reporte</div>

            <div class="fechas_reporte">
                <div class = "row">
                    <div class="input-field is-normal">
                        
                        <label class = "label" id="fechaInicio">Fecha inicio: <%= new Date(reporteN[0].fechaInicio).toLocaleDateString("ES-mx") %></label>
                        <label class = "label" id="fechaFinal"> Fecha fin: <%= new Date(reporteN[0].fechaFinal).toLocaleDateString(`ES-mx`) %> </label>
                        
                        <label class = "label">Número reporte: 
                        <%= reporteN[0].noReporte %>
                        </label>
                    </div>
                </div>
            </div>

            <div class="columns">
                <div class="column">
                    <div class="porcentajesRep">
                        <label class = "label">Porcentaje: <input value = '<%= reporteN[0].porcentaje %>' type="number" min = "0" placeholder="0" id="porcentaje"> </label>
                        <label class="label">Verdadero porcentaje de eficiencia:</label> 
                        <label class = "porcentajeEficiencia" type = "number" id = "porcentajeEficiencia" value = "0">0</label> 
                        <label class="label">Proporción: </label> 
                        <label class = "proporcion" type = "number" id = "proporcion" value = "0">0</label>
                    </div>
                </div>
            </div>
                
    <div class="columns">
        <div class="column">
            <div class="inputs_reporteRep">
                <div class = "field is-horizontal"> 
                    <label class = "label">Personal de Medio Tiempo: <input value = '<%= reporteN[0].personalMedioT %>' type="number" min = "0" placeholder="0" id="personalMedioT"></label>                             
                </div>

                <div class="field is-horizontal">
                    <label class = "label">Personal de Tiempo Completo: <input value = '<%= reporteN[0].personalCompletoT %>' type="number" min = "0" placeholder="0" id="personalCompletoT"></label>                     
                </div>

                <div class="field is-horizontal">
                    <label class = "label">Total de personal</label>
                    <div type = "number" id= "totalPersonal" min = "0" value = "0"
                    pattern="^[0-9]+" oninput="this.value = Math.max(this.value, 0)">0</div> 
                    <script>
                        const personalMedioT = document.getElementById("personalMedioT").value;
                        const personalCompletoT = document.getElementById("personalCompletoT").value;
                        totalPersonal.innerHTML = parseInt(personalMedioT) + parseInt(personalCompletoT);
                    </script>
                </div>
                <div class="field is-horizontal">
                    <label class = "label">Horas Esperadas</label>
                    <div type = "number" id= "horasEsperadas" min = "0" value = "0">0</div>
                </div>
                <div class="field is-horizontal">
                    <label class = "label">Horas de Vacaciones: <input value = '<%= reporteN[0].horasVacaciones %>' type="number" min = "0" placeholder="0" id="horasVacaciones"></label>
                    <script>
                        const horasVacaciones = document.getElementById("horasVacaciones").value;
                        horasEsperadas.innerHTML = parseInt(personalCompletoT * 48) + parseInt(personalMedioT * 34) - parseInt(horasVacaciones * 1);
                    </script>
                </div>
                <div class="field is-horizontal">
                    <label class = "label">Descripcion: <input value = '<%= reporteN[0].descripcion %>' type="text" min = "0" placeholder="descripcion" id="descripcion"></label>
                </div>
            </div>
        </div>
    </div>

    <table id="tabla_reporte">
        <thead>
        <tr>
            <th><abbr title="Proyecto">Proyecto</abbr></th>
            <th><abbr title="Tarea">Horas registradas</abbr></th>
            <th><abbr title="Horas">Horas reales</abbr></th>
        </tr>
        </thead>

        
        <tbody id="datos_tabla"> 
            <script>
                const nombreP = new Array();
            </script>       
            <% for (let h of horas) { %>
                <tr>
                    <td><%= h.nombreP %></td> 
                    <td><input id = "horasTrabajo['<%= h.nombreP %>']" type = "number" value="<%= h.horasReales %>" readonly></td> 
                    <td><input value = "<%= h.horasReales %>" type="number" id = "horasReales['<%= h.nombreP %>']" min = "0" placeholder="0" onkeyup="sumHoras()" onclick="sumHoras()"></td>
                </tr>
                <script>
                    nombreP.push("<%= h.nombreP %>");
                </script>
             <% } %>
            <tr>
                <td><b>TOTAL</b></td>
                <td id = "totalHorasTrabajo" type = "number" value = "0"></td>
                <td id = "totalHorasReales" type = "number" value = "0"></td>
            </tr>
        </tbody>

        <!--Botón de guardar-->
        <p class="control">
            <input type="submit" onclick="postReporteEditado()" value="Guardar cambios"
            class="button reportebtn is-success is-outlined" id="reportebtn">
          </p>

          <p class="control">
            <input type="submit" value="Generar PDF"
            class="button reportebtn is-info" id="crearPDF">
          </p>
        
        <script>
            const asyncFunc = () => {
                const fechaInicio = document.getElementById('fechaInicio').value;
                const fechaFinal = document.getElementById('fechaFinal').value
  
                //función que manda la petición asíncrona
                fetch('/reporte/buscar/' + fechaInicio + '/' + fechaFinal, {
                    method: 'GET',
                }).then(result => {
                    return result.json(); //Regresa otra promesa
                }).then(data => {
                    //Modificamos el DOM de nuestra página de acuerdo a los datos de la segunda promesa
                    console.log(data.fecha);
                    let html = '';
                    if (data.fecha.length > 0) {                 
                      for(let f of (data.fecha)) {
                        nombreP.push(f.nombreP);
                        html += '<tr>';
                        html += '<td>'
                        html += `${f.nombreP}`;
                        html += '</td>'; 
                        html += '<td>';
                        html += `<input id = "horasTrabajo['${f.nombreP }']" type = "number" value="${f.horasReales}" readonly>`;
                        html += '</td>';
                        html += '<td>';
                        html += `<input value = "${f.horasReales}" type="number" id = "horasReales['${f.nombreP}']" min = "0" placeholder="0" onkeyup="sumHoras()" onclick="sumHoras()">`;  
                        html += '</td>';
                        html += '</tr>';       
                      };      
                        html += '<tr>';
                        html += '<td>'; 
                        html += '<b>Total</b>';
                        html += '</td>';
                        html += '<td id = "totalHorasTrabajo" type = "number" value = "0">';
                        html += '</td>';
                        html += '<td id = "totalHorasReales" type = "number" value = "0">';
                        html += '</td>';
                        html += '</tr>';            
                    } else {
                        html = '<h2>No hay proyectos registrados en el periodo seleccionado.</h2>';
                    }
                    document.getElementById("datos_tabla").innerHTML = html;
                    sumHoras();
                      
                }).catch(err => {
                    console.log(err);
                });
            };
    
            document.getElementById('fechaFinal').oninput = asyncFunc;
        </script>

<script>
    function postReporteEditado(){
    let porcentaje = document.getElementById("porcentaje");
    let horasVacaciones = document.getElementById('horasVacaciones');
    let personalCompletoT = document.getElementById('personalCompletoT');
    let personalMedioT = document.getElementById('personalMedioT');
    let descripcion = document.getElementById('descripcion');

      var pathArray = window.location.pathname.split('/');
      let ruta = "/reporte/existente/" + pathArray[pathArray.length-1];
    let data = {
        porcentaje: porcentaje.value,
        horasVacaciones: horasVacaciones.value,
        personalCompletoT: personalCompletoT.value,
        personalMedioT: personalMedioT.value,
        descripcion: descripcion.value,
        }
        console.log(porcentaje);
        console.log(data);
        fetch(ruta, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body:JSON.stringify(data)
        })
        .then(response => response.json())
        .then(response => {
          console.log(response);
          window.location = '/reporte/crearReporte';
          console.log("Reporte editado") 
      }).catch(err => {
        console.log(err);
      });
    }
    
</script>

<script>
    const totalHorasReales = document.getElementById("totalHorasReales");
    const porcentaje = document.getElementById("porcentaje").value;
    console.log(totalHorasReales);
    console.log(typeof(totalHorasReales));
    console.log(horasEsperadas);
    console.log(typeof(horasEsperadas));
    porcentajeEficiencia.innerHTML = (totalHorasReales / horasEsperadas).toFixed(2);
    proporcion.innerHTML = (parseFloat(porcentajeEficiencia) / parseFloat(porcentaje)).toFixed(2);
</script> 
    
    

<script src="/js/scriptReporte.js"></script>